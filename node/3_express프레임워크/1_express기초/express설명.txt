express프레임워크

- 이전까지 진행햇던 기본적인 node코드는 서버 하나가 모든 업무를 담당(생성, 요청, 응답 .....)
- 사용자가 증가 -> 작업 증가-> 파일수 증가
- 분업화를 진행 
-------------------------------------------------------------------------------------------------------------------------------------------------------
- 1. config : 설정에 관련된 정보들을 저장(db연결, api key값 등 ....)
- 2. public : 정적인 파일들을 관리하는 공간(css, js, img, video...)
- 3. routes : 경로를 담당하는 공간 (이정표)
- 4. views : 동적인 웹페이지를 담당하는 공간
- 5. app.js : express의 핵심 컨트롤 타워 (모든 기능 관리)

[express 설치 프로세스]
1. 사용할 폴더 생성 (프레임워크는 프로젝트 단위로 사용)
2. express 설치 - npm install express
3. 기본 폴더 구성 -> config, public ..
4. app.js -> 메인 파일 생성